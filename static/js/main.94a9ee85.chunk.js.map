{"version":3,"sources":["service/opschemas.js","service/operation.js","service/sign.js","components/SignErrorsView.jsx","components/SignFormComponents.jsx","components/SignForm.jsx","components/OperationDetails.jsx","components/TransactionView.jsx","components/ErrorsView.jsx","components/App.js","serviceWorker.js","index.js"],"names":["opschemas","$id","type","minItems","items","$ref","pattern","minimum","maximum","maxLength","enum","ROLES_PRIORITY","owner","active","posting","memo","sort_roles","roles","sort","a","b","validate","Ajv","schemas","VizSchema","verbose","getSchema","Transaction","json","Object","classCallCheck","this","errors","raw_transaction","toConsumableArray","ops","readOps","createClass","key","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","opTuple","push","Operation","err","return","get","length","temp","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","op","role","name","body","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","operations","operation","viz","require","SIGN_TYPE","PASSWORD","WIF","WEBSOCKET","DEFAULT_WS","NODES","_NODES","defineProperty","getCurrentSelectedNode","localStorage","getItem","setupNode","ws","console","log","api","stop","e","error","config","set","_callee","transaction","sign_type","account","password","required_wif","wif","tx","prepared_tx","signed_tx","ret","regenerator_default","wrap","_context","prev","getWif","extensions","broadcast","_prepareTransaction","sent","auth","signTransaction","broadcastTransactionSynchronousAsync","abrupt","getPrivateKeys","_callee2","_ref","_ref2","_context2","getAccountsAsync","slicedToArray","signandsend","ERROR_DESC","Expected version","3020100","2020000","3080000","2030000","1020400","4020100","3010000","getDesc","msg","match","SignErrorsView","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","props","react_default","createElement","message","arr","split","i","className","desc","result","block_num","id","redirect","isError","alert","extractErrorMessage","extractUsefulInfos","Component","NodeSelector","current_ws","for","onChange","v","setItem","setCurrentSelectedNode","target","keys","map","selected","WifInput","wif_class","wif_error","ev","aria-describedby","required","SignButton","onClick","onSign","FormWif","form_class","SignFormComponents_NodeSelector","htmlFor","SignFormComponents_WifInput","assign","translate_role","SignFormComponents_SignButton","FormAccountAndPasswort","account_error","account_class","placeholder","FormSelector","SignFormComponents_FormWif","SignFormComponents_FormAccountAndPasswort","SignForm","_this","call","state","user","sending","_this2","then","onSuccess","catch","setState","_this3","setTimeout","window","location","_this4","_x5","_checkAccount","checkAccount","send","_this$setState","_this5","_this$props","nowif","TabButton","label","react_responsive_default","minWidth","maxWidth","components_SignErrorsView","SignFormComponents_FormSelector","is_pass","icon","index_esm","title","OP_TRANSLATIONS","vote","comment","transfer","transfer_to_vesting","withdraw_vesting","limit_order_create","limit_order_cancel","account_create","account_update","witness_update","account_witness_vote","account_witness_proxy","custom","report_over_production","delete_comment","custom_json","comment_options","set_withdraw_vesting_route","limit_order_create2","challenge_authority","prove_authority","request_account_recovery","recover_account","change_recovery_account","escrow_transfer","escrow_dispute","escrow_release","pow2","escrow_approve","transfer_to_savings","transfer_from_savings","cancel_transfer_from_savings","custom_binary","decline_voting_rights","reset_account","set_reset_account","delegate_vesting_shares","account_create_with_delegation","account_metadata","proposal_create","proposal_update","proposal_delete","chain_properties_update","break_free_referral","delegate_vesting_shares_with_interest","reject_vesting_shares_delegation","TransactionView","status","components_SignForm","getOpName","from","to","amount","substring","JSON","stringify","getOpDetails","ErrorsView","keyword","dataPath","schemaPath","ErrorMessage","App","params","queryString","parse","search","subtitle","includes","sanatizer","sanitizeUrl","tr","content","components_TransactionView","App_ErrorMessage","components_ErrorsView","rel","href","Boolean","hostname","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94a9ee85.chunk.js","sourcesContent":["/*\n* Схемы операций для валидирования.\n*/\n\n/**\n * Взято из исходников голоса\n */\nconst known_operations = [\n    \"vote\",\n    \"content\",\n    \"transfer\",\n    \"transfer_to_vesting\",\n    \"withdraw_vesting\",\n    \"account_update\",\n    \"witness_update\",\n    \"account_witness_vote\",\n    \"account_witness_proxy\",\n    \"delete_content\",\n    \"custom\",\n    \"set_withdraw_vesting_route\",\n    \"request_account_recovery\",\n    \"recover_account\",\n    \"change_recovery_account\",\n    \"escrow_transfer\",\n    \"escrow_dispute\",\n    \"escrow_release\",\n    \"escrow_approve\",\n    \"delegate_vesting_shares\",\n    \"account_create\",\n    \"account_metadata\",\n    \"proposal_create\",\n    \"proposal_update\",\n    \"proposal_delete\",\n    \"chain_properties_update\",\n    \"committee_worker_create_request\",\n    \"committee_worker_cancel_request\",\n    \"committee_vote_request\",\n    \"committee_pay_request\",\n    \"witness_reward\",\n    \"create_invite\",\n    \"claim_invite_balance\",\n    \"invite_registration\",\n    \"versioned_chain_properties_update\",\n    \"award\",\n    \"set_paid_subscription\",\n    \"paid_subscribe\",\n    \"set_account_price\",\n    \"set_subaccount_price\",\n    \"buy_account\",  \n]\n\n\n/**\n * Схема параметра transaction. Ожидается массив (Array) операций\n */\nconst transaction = {\n    \"$id\" : \"/viz/transaction\",\n    type: \"array\",\n    minItems: 1,\n    items: [ \n        {\"$ref\": \"/viz/operation\"}\n    ]\n}\n\n/**\n * Операция \n */\nconst operation = {\n    \"$id\" : \"/viz/operation\",\n    type: \"array\",\n    minItems: 2, maxLength: 2,\n    items: [\n        {type: \"string\", enum: known_operations},\n        {type: \"object\"}\n    ]\n}\n\n\nconst account = {\n    \"$id\" : \"/viz/account\",\n    type: \"string\",\n    pattern: \"^[a-z][-\\\\.a-z\\\\d]{2,15}[a-z\\\\d]$\"\n}\n\nconst permlink = {\n    \"$id\" : \"/viz/permlink\",\n    type: \"string\",\n    pattern: \"^.{1,256}$\"\n}\n\nconst public_key = {\n    \"$id\" : \"/viz/public_key\",\n    type: \"string\",\n    pattern: \"^GLS[0-9a-zA-Z]{50}$\"\n}\n\nconst percent = {\n    \"$id\" : \"/viz/percent\",\n    type: \"integer\",\n    minimum: 0, \n    maximum: 10000\n}\n\nconst asset = {\n    \"$id\" : \"/viz/asset\",\n    type: \"string\",\n    pattern: \"^[0-9]+\\\\.[0-9]{3} (viz|GBG)$\"\n}\n\nexport default [\n    //базовые типы\n    transaction,\n    account,\n    asset,\n    permlink,\n    public_key,\n    percent, \n\n    operation,\n]\n\n","/*\n* Вспомогательные классы для валидирования входных данных (операций) и для отображения.\n*/\nimport Ajv from \"ajv\";\nimport VizSchema from \"./opschemas\";\n\nimport operations from \"viz-js-lib/lib/broadcast/operations\";\n\nconst ROLES_PRIORITY = {\n    \"owner\" : 0,\n    \"active\" : 1,\n    \"posting\" : 2,\n    \"memo\" : 3\n}\n\nfunction sort_roles(roles) {\n    return roles.sort((a,b) => {\n        return ROLES_PRIORITY[b] - ROLES_PRIORITY[a];\n    })\n}\n\nconst ajv = new Ajv({schemas: VizSchema, verbose: true});\nconst validate = ajv.getSchema(\"/viz/transaction\");\n\nexport class Transaction {\n    constructor(json) {\n        if(!validate(json)) {\n            \n            throw validate.errors;\n        }\n        this.raw_transaction = [...json];\n        this.ops = [];\n        this.readOps();\n    }\n\n    /**\n     * Вернуть минимальную, требуемую роль\n     */\n    get required_wif() {\n        if(this.ops.length == 0) {\n            return null;\n        }\n        const temp = [];\n        for(let op of this.ops) {\n            temp.push(op.role);\n        }\n        return sort_roles(temp)[0];\n    }\n\n    readOps() {\n        for(let opTuple of this.raw_transaction) {\n            this.ops.push(new Operation(opTuple[0], opTuple[1]));\n        }\n    }\n}\n\nclass Operation {\n    constructor(name, body) {\n        this.name = name;\n        this.body = body;\n\n        for(let op of operations) {\n            if(op.operation === this.name) {\n                this.roles = sort_roles(op.roles);\n            }\n        }\n    }\n\n    get role() {\n        //Вернуть самый слабый ключ \n        return this.roles[0];\n    }\n    \n}\n\n//////////////////////////\n\nfunction test_roles() {\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\", \"posting\"]))\n    console.log(\"TEST\", sort_roles([\"posting\", \"active\", \"owner\"]))\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\"]))\n}\n\n//test_roles();","const viz = require(\"viz-js-lib\");\n\nexport const SIGN_TYPE = {\n    PASSWORD: \"password\",\n    WIF: \"wif\",\n}\n\nconst WEBSOCKET = \"websocket\";\nconst DEFAULT_WS = \"wss://viz.lexai.host\";\n//wss://viz.lexai.host/','wss://solox.world/ws\nexport const NODES = {\n    [DEFAULT_WS] : \"lex\",\n    \"wss://solox.world/ws\" : \"solox\"\n}\n\nexport function getCurrentSelectedNode() {\n    return localStorage.getItem(WEBSOCKET) || DEFAULT_WS;\n}\n\nexport function setCurrentSelectedNode(ws = DEFAULT_WS) {\n    viz.api.stop();\n    viz.config.set(WEBSOCKET, ws);\n\n    localStorage.setItem(WEBSOCKET, ws);\n}\n\nfunction setupNode() {\n    const ws = getCurrentSelectedNode();\n    try {\n        console.log(\"stop viz\");\n        viz.api.stop();\n    } catch(e) {\n        console.error(e);\n    }\n    console.log(\"set ws to \" + ws);\n    viz.config.set(WEBSOCKET, ws);\n}\n\n/**\n * Подпись и отправка транзакции. Имплементация взята из golos-js.broadcast.send и адаптирована под свои нужды.\n * @param {operation/Transaction} transaction \n * @param {SIGN_TYPE} sign_type \n * @param {string} account \n * @param {string} password \n * @returns \"Возвращает данные о созданной транзакции\"\n */\nasync function signandsend(transaction, sign_type, account, password) {\n\n    setupNode();\n\n    const {raw_transaction, required_wif} = transaction;\n\n    //Получаем ключ из аккаунта и пароля, если передан пароль\n    const wif = getWif(sign_type, account, password, required_wif);\n\n    //Формируем объект транзакции и объект с ключем\n    const tx = {extensions: [], operations: raw_transaction}; \n    const key = {[required_wif]: wif};\n\n    //Подготавливаем транзакцию используя метод библиотеки. Получаем блок референсный блок, выставляем expiration.\n    const prepared_tx = await viz.broadcast._prepareTransaction(tx);\n    \n    //Подписываем транзакцию ключем\n    const signed_tx = viz.auth.signTransaction(prepared_tx, key);\n\n    //Отправляем транзакцию ноде и в ответ получаем ID транзакции и блок.\n    let ret = await viz.api.broadcastTransactionSynchronousAsync(signed_tx);\n    return ret;\n}\n\n/**\n * Генерирует из имени аккаунта и мастер-пароля ключ нужного уровня доступа. \n * Или возвращает пароль как есть, в надежде, что это приватный ключ.\n * @param {SIGN_TYPE} sign_type - Тип подписи. Аккаунт + пароль или приыватный ключ.\n * @param {string} account - Аккаунт голос\n * @param {string} password - Пароль или приватный ключ\n * @param {string} required_wif - Требуемый уровень доступа - owner, active, posting или memo\n * @returns \"Возвращает необходимый для подписи ключ.\"\n */\nfunction getWif(sign_type, account, password, required_wif) {\n    switch(sign_type) {\n        case SIGN_TYPE.PASSWORD:\n            const wifs = viz.auth.getPrivateKeys(account, password, [required_wif]);\n            return wifs[required_wif];\n        default:\n            return password;\n    }\n}\n\n/**\n * Проверяет, существует ли аккаунт с таким именем. Для этого пробует загрузить данные аккаунта.\n * @param {string} account \n * @returns Возвращет текст с сообщением об ошибке.\n */\nexport async function checkAccount(account) {\n    setupNode();\n    if(!account) {\n        return \"Аккаунт обязателен для аутентификации паролем\";\n    }\n    const [acc] = await viz.api.getAccountsAsync([account]);\n    if(!acc) {\n        return \"Аккаунт с таким именем не существует!\";\n    }\n    return null;\n}\n\nexport default signandsend;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ERROR_DESC = {\n    \"Expected version\": \"Вероятно введенный ключ не является приватным ключем, неверный формат, пропущенный знак\",\n    \"3020100\": \"Введенный ключ либо недостаточного уровня либо отсутствует в ауторити пользователя, неверный пароль\",\n    \"2020000\": \"Недостаточно средств на счету пользователя\",\n    \"3080000\": \"Повторная транзакция с такими же параметрами в блоке\",\n    \"2030000\": \"Ошибка в операции с указанным индексом\",\n    \"1020400\": \"Неверное переданное значение\",\n    \"4020100\": \"Значение находится вне заданных пределов\",\n    \"3010000\": \"Ошибочная операция в транзакции\",\n}\n\nfunction getDesc(msg) {\n    for(let pattern in ERROR_DESC) {\n        if(msg.match(pattern)) {\n            return ERROR_DESC[pattern];\n        }\n    }\n    return null;\n}\n\nexport class SignErrorsView extends Component {\n    static propTypes = {\n        error: PropTypes.object,\n        result: PropTypes.object,\n        redirect: PropTypes.string,\n    }\n\n    extractErrorMessage() {\n        const error = this.props.error;\n        console.log(\"error\", error);\n        let ret = [<h4 key=\"head\">Ошибка отправки транзакции</h4>];\n        if(error.message) {\n            let arr = error.message.split(\"\\n\");\n            for(let i = 0; i < arr.length; i++) {\n                if(arr[i] && !arr[i].match(/for the full error payload/)) {\n                    ret.push(<p key=\"error-text\" className=\"mb-0\">{arr[i]}</p>);\n                    const desc = getDesc(arr[i]);\n                    if(desc) {\n                        ret.push(<small key=\"error-desc\" className=\"mb-0\">{desc}</small>);\n                    }                    \n                }\n            }\n        }\n\n        return ret;\n    }\n\n    extractUsefulInfos() {\n        console.log(\"ret\", this.props.result);\n        return <div>\n            <h4>Отправлено!</h4>\n                <p className=\"mb-0\">Номер блока: {this.props.result.block_num}</p>\n                <p className=\"mb-0\">ID транзакции: {this.props.result.id}</p>\n                {this.props.redirect && <p className=\"mt-2\">Вы будете автоматически перенаправлены на адрес <strong>{this.props.redirect}</strong>...</p>\n                }\n            </div>;\n    }\n\n    render() {\n        const isError = !!this.props.error;\n        const alert = isError? \"danger\" : \"success\"\n        const message = isError?this.extractErrorMessage():this.extractUsefulInfos();\n        return (\n            <div className={\"mt-5 mb-5 alert alert-\"+ alert} role=\"alert\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default SignErrorsView\n","import React from 'react'\nimport {SIGN_TYPE} from \"../service/sign\";\n\nimport {getCurrentSelectedNode, setCurrentSelectedNode, NODES} from \"../service/sign\";\n\nconst NodeSelector = (props) => {\n\n    const current_ws = getCurrentSelectedNode();\n\n    return (\n        <div className=\"form-group  input-group-sm\">\n            <label for=\"selectNode\">Нода</label>\n            <select className=\"form-control\" id=\"selectNode\" onChange={(v => setCurrentSelectedNode(v.target.value))}>\n                {Object.keys(NODES).map(ws => (\n                    <option value={ws}  selected={ws === current_ws}>{NODES[ws]}</option>\n                ))}\n            </select>                  \n        </div>\n    );\n}\n\nfunction translate_role(role) {\n    console.log(\"translate role\", role);\n    switch(role) {\n        case \"owner\": return \"приватный ключ владельца\"; \n        case \"active\": return \"приватный, активный ключ\"; \n        case \"posting\": return \"приватный, постинг ключ\"; \n        case \"memo\": return \"приватный, ключ для заметок\"; \n        default:\n            return null;\n    }\n}\n\nexport const WifInput = (props) => {\n    const wif_class = (props.wif_error?\" is-invalid\":\"\");\n    return (\n        <input id={props.id} name={props.id}\n            value={props.wif}\n            onChange={(ev) => props.onChange(\"wif\", ev.target.value)}\n            type=\"password\"\n            className={\"form-control\" + wif_class}\n            aria-describedby=\"wif-help\"\n            required />\n    );\n}\n\n\nexport const TabButton = (props) => {\n    const { active } = props;\n    const active_class = active ? \" active \" : \"\";\n    return (\n        <li className=\"nav-item\">\n            <button className={\"btn nav-link \" + active_class} onClick={props.selectForm}>{props.label}</button>\n        </li>\n    )\n}\n\nexport const SignButton = (props) => {\n    return (\n        <div className=\"form-group input-group-sm\">\n            <button type=\"button\" id=\"sign-botton\" className=\"btn btn-primary\" onClick={props.onSign}>Отправить</button>\n        </div>\n    )\n}\n\nexport const FormWif = (props) => {\n    const {transaction, form_class, wif_error} = props;\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <NodeSelector />\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Приватный ключ</label>\n\n                <WifInput id=\"wif\" {...props} />\n\n                <small id=\"wif-help\" className=\"form-text text-muted\">Для подписи транзакции требуется как минимум <strong>{translate_role(transaction.required_wif)}</strong></small>\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n            <SignButton  {...props} />\n        </form>\n    )\n}\n\nexport const FormAccountAndPasswort = (props) => {\n    const {form_class, onChange, account, account_error, wif_error} = props;\n    const account_class = (account_error?\" is-invalid\":\"\");\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <NodeSelector />\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"account\">Имя пользователя</label>\n\n                <input\n                    id=\"account\"\n                    name=\"account\"\n                    value={account}\n                    onChange={(ev) => onChange(\"account\", ev.target.value)}\n                    type=\"text\"\n                    className={\"form-control\" + account_class}\n                    placeholder=\"Аккаунт в блокчейне viz\"\n                    required />\n\n                <div className=\"invalid-feedback\">{account_error}</div>\n            </div>\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Пароль</label>\n\n                <WifInput id=\"password\" {...props} />\n\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n\n            <SignButton  {...props}/>\n        </form>\n    )\n}\n\nexport const FormSelector = (props) => {\n\n    switch (props.sign_type) {\n        case SIGN_TYPE.WIF:\n            return <FormWif {...props} />;\n        default:\n            return <FormAccountAndPasswort {...props} />;\n    }\n}\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport signandsend, {SIGN_TYPE, checkAccount} from \"../service/sign\";\nimport SignErrorsView from './SignErrorsView';\nimport MediaQuery from 'react-responsive';\n\nimport {FormSelector} from \"./SignFormComponents\";\nimport {FaKey, FaUser} from \"react-icons/fa\";\n\nexport class SignForm extends Component {\n\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            wif: \"\",\n            account: props.user || \"\",\n            error: null,\n            result: null,\n            sign_type: SIGN_TYPE.PASSWORD,\n            account_error : null,\n            sending: false,\n            redirect: null,\n        }\n    }\n\n    /**\n     * Собственно отправка транзакции\n     */\n    send() {\n        signandsend(this.props.transaction, this.state.sign_type, this.state.account, this.state.wif)\n            .then(result => this.onSuccess(result))\n            .catch(error => this.setState({ result: null, error, account_error: null, sending: false }));\n        this.setState({sending:true, error: null, result: null});\n    }\n\n    onSuccess(result) {\n        this.setState({ result, error: null, account_error: null, sending: false })\n        this.redirect();\n    }\n\n    redirect() {\n        if(!this.props.redirect) {\n            return;\n        }\n\n        setTimeout(() => {window.location = this.props.redirect}, 5 * 1000);\n    }\n\n    onSign() {\n        //Валидация форм.\n        switch(this.state.sign_type) {\n            case SIGN_TYPE.PASSWORD:\n                    let wif_error = null;\n                    if(!this.state.wif) {\n                        wif_error = \"Пароль обязателен\";\n                    }\n\n                    checkAccount(this.state.account).then(account_error => {\n                    if(account_error || wif_error) {\n                        this.setState({account_error, wif_error});\n                    } else {\n                        //При отсутствии ошибок оправить транзакцию\n                        this.send();\n                    }\n                }).catch(error => {\n                    console.error(\"Ошибка проверки аккаунта\");\n                    this.setState({account_error: \"Не получилось проверить аккаунт\"});\n                })\n\n                break;\n            default:\n                if(!this.state.wif) {\n                    this.setState({wif_error: \"Приватный ключ обязателен\"})\n                    return;\n                }\n                //При отсутствии ошибок оправить транзакцию\n                this.send();\n        }\n    }\n\n    onChange(key, value) {\n        console.log(\"onChange\", key, value)\n        this.setState({[key]:value, wif_error:null, account_error:null});\n    }\n\n    render() {\n        const {nowif, redirect} = this.props;\n        let form_class = \"needs-validation\";\n\n        const TabButton = (props) => {\n            const { sign_type } = props;\n            const active = this.state.sign_type === sign_type ? \" active \" : \"\";\n            return (<li className=\"nav-item\"><button  type=\"button\" className={\"btn btn-block nav-link \" + active} onClick={() => this.setState({ sign_type })}>{props.label}</button></li>)\n        }\n\n        const BottomToggler = (props) => {\n            if(nowif) {\n                const is_pass = this.state.sign_type === SIGN_TYPE.PASSWORD;\n                const icon = is_pass?<FaKey />:<FaUser />;\n                const sign_type =  is_pass?SIGN_TYPE.WIF:SIGN_TYPE.PASSWORD;\n                const title = is_pass?\"Подпись ключом\":\"Подпись паролем\";\n                return <button type=\"button\" title={title} \n                    className=\"btn-outline-primary float-right btn btn-sm btn-primary\" \n                    onClick={() => this.setState({ sign_type })}>{icon}</button>;\n            }\n            return null;\n        }\n\n        return (\n            <div className=\"clearfix border p-2 m-2\">\n                {!nowif && <div className=\" mb-3\">\n                \n                {(!this.state.sending && !this.state.result) && \n                <div>\n                <MediaQuery minWidth={425}>\n                    <ul className=\"nav nav-tabs\">\n                        <TabButton label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                        <TabButton label=\"Подпись ключом\" sign_type={SIGN_TYPE.WIF} />\n                    </ul>\n                </MediaQuery>\n                <MediaQuery maxWidth={420}>\n                    <ul className=\"nav nav-pills nav-justified\">\n                        <TabButton label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                        <TabButton label=\"Подпись ключем\" sign_type={SIGN_TYPE.WIF} />\n                    </ul>\n                </MediaQuery>\n                </div>\n                }\n\n                </div>}\n                \n                {(this.state.error || this.state.result) && <SignErrorsView error={this.state.error} result={this.state.result} redirect={redirect} />}\n                {this.state.sending && <div className={\"mt-5 mb-5 alert alert-warning\"} role=\"alert\">\n                    <h4>Отправка...</h4>\n                    </div>\n                }\n\n                {(!this.state.sending && !this.state.result) && \n                    <FormSelector \n                        onChange={(key,value) => this.onChange(key, value)}\n                        onSign={() => this.onSign()}\n                        form_class={form_class}\n                        {...this.state}\n                        {...this.props}\n                    />\n                }\n                {(!this.state.sending && !this.state.result) &&  <BottomToggler /> }\n            </div>\n        )\n    }\n}\n\nexport default SignForm\n","import React from 'react'\n\nexport function getOpDetails(op) {\n    switch(op.name) {\n        case \"transfer\":\n            return <div className=\"md-2 border-bottom\">\n                <strong>От</strong> {op.body.from}, <strong>Кому</strong> {op.body.to}, <strong>Сумма</strong> {op.body.amount}\n                <br /><strong>Заметка</strong> {(\"\"+op.body.memo || \"\").substring(0, 50)}\n            </div>;\n        default:\n            return <pre>{JSON.stringify(op.body, null, 2)}</pre>;\n    }\n}\n\nconst OP_TRANSLATIONS = {\n    vote: \"Апвоут\", \n    comment: \"Пост/Комментарий\", \n\n    transfer: \"Перевод\", \n    transfer_to_vesting: \"Перевод в СГ\", \n    withdraw_vesting: \"Понижение СГ\", \n\n    limit_order_create: \"Создать ордер\", \n    limit_order_cancel: \"Отменить ордер\", \n\n    account_create: \"Создать аккаунт\", \n    account_update: \"Обновить аккаунт\", \n\n    witness_update: \"Обновить делегата\", \n    account_witness_vote: \"Проголосовать за делегата\", \n    account_witness_proxy: \"Назначить доверенного\", \n\n    custom: \"custom\", \n\n    report_over_production: \"Настучать\", \n\n    delete_comment: \"Удалить пост или комментарий\", \n    custom_json: \"Кастомная операция\", \n    comment_options: \"Настроить пост/комментарий\", \n    set_withdraw_vesting_route: \"Установить путь понижения СГ\", \n    limit_order_create2: \"Создать ордер 2\", \n    challenge_authority: \"challenge_authority\", \n    prove_authority: \"prove_authority\", \n    request_account_recovery: \"request_account_recovery\", \n    recover_account: \"recover_account\", \n    change_recovery_account: \"change_recovery_account\", \n    escrow_transfer: \"escrow_transfer\", \n    escrow_dispute: \"escrow_dispute\", \n    escrow_release: \"escrow_release\", \n    pow2: \"Proof of Work 2\", \n    escrow_approve: \"escrow_approve\", \n    transfer_to_savings: \"Перевести в сейф\", \n    transfer_from_savings: \"Вывести из сейфа\", \n    cancel_transfer_from_savings: \"Отменить вывод из сейфа\", \n    custom_binary: \"Кастомная операция (бин.)\", \n    decline_voting_rights: \"Отказаться от голосования (необратимая операция!)\", \n    reset_account: \"reset_account\", \n    set_reset_account: \"set_reset_account\", \n    delegate_vesting_shares: \"delegate_vesting_shares\", \n    account_create_with_delegation: \"account_create_with_delegation\", \n    account_metadata: \"Обновить профиль\", \n    proposal_create: \"proposal_create\", \n    proposal_update: \"proposal_update\", \n    proposal_delete: \"proposal_delete\", \n    chain_properties_update: \"Обновить параметры сети\", \n    break_free_referral: \"Откупиться\", \n    delegate_vesting_shares_with_interest: \"Делегирование с отчислением процента\", \n    reject_vesting_shares_delegation: \"Отказаться от делегирования\",   \n}\n\nexport function getOpName(op) {\n    let name = OP_TRANSLATIONS[op.name];\n    if(!name) name = op.name;\n\n    return <span className=\"label label-default\">{name}</span>\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport SignForm from './SignForm';\nimport {getOpDetails, getOpName} from \"./OperationDetails\";\n\nexport class TransactionView extends Component {\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.status = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row \">\n                    <div className=\"col-sm-12\">\n                        <SignForm {...this.props} />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                    <div className=\" border m-2 p-2\">\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            <h4>Содержимое</h4>\n                        </div>\n\n\n                        <div className=\"container\">\n                                {this.props.transaction.ops.map((op, i) => (\n                                <div className=\"row\" key={i}>\n                                    <div className=\"col-sm-3\"><div className=\"font-weight-bold\">Операция</div>{getOpName(op)}<div><small>{op.name}</small></div></div>\n                                    <div className=\"col-sm-9\"><div className=\"font-weight-bold\">Детальная информация</div>{getOpDetails(op)}</div>\n                                </div>\n                                ))\n                                }\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TransactionView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ErrorsView extends Component {\n    static propTypes = {\n        errors: PropTypes.arrayOf(Object).isRequired\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alert alert-danger\" role=\"alert\">\n                <h4>Полученная на подпись транзакция содержит ошибки</h4>\n                </div>\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th>Тип ошибки</th>\n                            <th>Место в данных</th>\n                            <th>Схема</th>\n                            <th>Сообщение</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.errors.map((e, i) => <tr key={i}>\n                        <td>{e.keyword}</td>\n                        <td>{e.dataPath}</td>\n                        <td>{e.schemaPath}</td>\n                        <td>{e.message}</td>\n                    </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default ErrorsView\n","import queryString from \"query-string\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport TransactionView from \"./TransactionView\";\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport { Transaction } from \"../service/operation\";\nimport ErrorsView from \"./ErrorsView\";\nimport viz from \"viz-js-lib\";\n\nimport sanatizer from \"@braintree/sanitize-url\";\n\nviz.config.set(\"websocket\", \"wss://ws.viz.ropox.app\");\n\n\nconst ErrorMessage = (props) => {\n    return (\n        <div className=\"mt-5 mb-5 alert alert-danger\" role=\"alert\">\n            <h4>{props.error}</h4>\n        </div>\n    );\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction: null,\n            errors: null,\n            error: null\n        }\n    }\n\n    componentDidMount() {\n        const params = queryString.parse(window.location.search);\n        const title = (params[\"title\"] || \"Визирь\");\n        const subtitle = (params[\"subtitle\"]);\n        const nowif = Object.keys(params).includes(\"nowif\");\n        const user = params[\"user\"];\n        let redirect = sanatizer.sanitizeUrl(params[\"redirect\"] || \"\");\n\n        if(redirect === \"about:blank\") {\n            redirect = null;\n        }\n\n        let tr = params[\"tr\"];\n        if (!tr) {\n            console.log(\"Не найден URL параметр tr\");\n            this.setState({ title, subtitle, error: \"Вызов без параметров\" });\n            return;\n        }\n\n        try {\n            //Пробуем распарсить json\n            let json = null;\n            try {\n                json = JSON.parse(tr);\n            } catch (error) {\n                console.log(\"not valid json\", tr);\n                this.setState({ title, subtitle, error: \"Переданная транзакция не является валидным JSON\" });\n                return;\n            }\n            //Проверка транзакции на валидность\n            const transaction = new Transaction(json);\n            this.setState({ transaction, title, subtitle, user, nowif, redirect });\n        } catch (errors) {\n            //обнаружены ошибки\n            console.log(\"found errors\", errors)\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n\n        let content = null;\n        if (this.state.transaction) {\n            content = <TransactionView redirect={this.state.redirect} nowif={this.state.nowif} user={this.state.user} transaction={this.state.transaction} />\n        } else if (this.state.error) {\n            content = <ErrorMessage error={this.state.error} />\n        } else if (this.state.errors) {\n            content = <ErrorsView errors={this.state.errors} />\n        }\n\n        return (\n            <div className=\"container App\">\n                {<div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light \" >\n                            <div className=\"mr-auto\">\n                                <h3>{this.state.title}</h3>\n                                {this.state.subtitle && <h5>{this.state.subtitle}</h5>}\n                                <br /><small>Подпись транзакции VIZ\n                                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://golos.io/@ropox/sign\">&nbsp;<span className=\"rounded-circle bg-info text-white font-weight-bold\">&nbsp;?&nbsp;</span></a></small>\n                            </div>\n                        </nav>\n                    </div>\n                </div>}\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}